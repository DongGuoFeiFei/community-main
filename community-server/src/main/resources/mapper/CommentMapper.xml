<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.communityserver.mapper.CommentMapper">

    <!-- 查询所有顶级评论（parent_id为null的评论） -->
    <select id="getCommentsById" resultMap="CommentsMap">
        SELECT c.comment_id,
               c.article_id,
               CASE WHEN c.is_del = 1 THEN null ELSE c.user_id END                AS user_id,
               CASE WHEN c.is_del = 1 THEN '该用户已删除评论' ELSE c.content END  AS content,
               c.parent_id,
               c.first_id,
               c.created_at,
               CASE WHEN c.is_del = 1 THEN '该用户已删除评论' ELSE u.nickname END AS nickname,
               CASE WHEN c.is_del = 1 THEN NULL ELSE f.access_url END             AS access_url,
               pu.nickname                                                        AS replied_nickname
        FROM comments c
                 LEFT JOIN user u ON c.user_id = u.user_id
                 LEFT JOIN file f ON u.file_id = f.file_id
                 LEFT JOIN comments pc ON c.parent_id = pc.comment_id
                 LEFT JOIN user pu ON pc.user_id = pu.user_id
        WHERE c.article_id = #{articleId}
          AND c.parent_id IS NULL
        ORDER BY c.created_at DESC
    </select>

    <!-- 递归查询子评论 -->
    <select id="findCommentsByParentId" resultMap="CommentsMap">
        SELECT c.comment_id,
               c.article_id,
               CASE WHEN c.is_del = 1 THEN '0' ELSE c.user_id END                 AS user_id,
               CASE WHEN c.is_del = 1 THEN '该用户已删除评论' ELSE c.content END  AS content,
               c.parent_id,
               c.first_id,
               c.created_at,
               CASE WHEN c.is_del = 1 THEN '该用户已删除评论' ELSE u.nickname END AS nickname,
               CASE WHEN c.is_del = 1 THEN NULL ELSE f.access_url END             AS access_url,
               pu.nickname                                                        AS replied_nickname
        FROM comments c
                 LEFT JOIN user u ON c.user_id = u.user_id
                 LEFT JOIN file f ON u.file_id = f.file_id
                 LEFT JOIN comments pc ON c.parent_id = pc.comment_id
                 LEFT JOIN user pu ON pc.user_id = pu.user_id
        WHERE c.parent_id = #{parentId}
        ORDER BY c.created_at ASC
    </select>

    <!-- 结果映射 -->
    <resultMap id="CommentsMap" type="com.example.communityserver.entity.vo.CommentVo">
        <id column="comment_id" property="commentId"/>
        <result column="article_id" property="articleId"/>
        <result column="user_id" property="userId"/>
        <result column="nickname" property="nickname"/>
        <result column="access_url" property="accessUrl"/>
        <result column="content" property="content"/>
        <result column="parent_id" property="parentId"/>
        <result column="created_at" property="createdAt"/>
        <result column="replied_nickname" property="repliedNickname"/>
        <!-- 递归关联查询子评论 -->
        <collection property="voList"
                    column="comment_id"
                    select="findCommentsByParentId"
                    javaType="java.util.List"/>
    </resultMap>

    <select id="getReplyById" resultType="com.example.communityserver.entity.vo.ReplyVo">
        SELECT c.comment_id,
               c.article_id,
               CASE WHEN c.is_del = 1 THEN '0' ELSE c.user_id END                 AS user_id,
               CASE WHEN c.is_del = 1 THEN '该用户已删除评论' ELSE c.content END  AS content,
               c.parent_id,
               c.first_id,
               c.created_at,
               CASE WHEN c.is_del = 1 THEN '该用户已删除评论' ELSE u.nickname END AS nickname,
               CASE WHEN c.is_del = 1 THEN NULL ELSE f.access_url END             AS access_url,
               pu.nickname                                                        AS replied_nickname
        FROM comments c
                 LEFT JOIN user u ON c.user_id = u.user_id AND c.is_del = 0
                 LEFT JOIN file f ON u.file_id = f.file_id AND c.is_del = 0
                 LEFT JOIN comments pc ON c.parent_id = pc.comment_id AND c.is_del = 0
                 LEFT JOIN user pu ON pc.user_id = pu.user_id AND c.is_del = 0
        WHERE c.comment_id = #{commentId}
    </select>


</mapper>

